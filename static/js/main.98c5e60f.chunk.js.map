{"version":3,"sources":["util.js","components/GeneralIndex.js","components/RegionList.js","components/Header.js","components/Detail.js","components/AccordionList.js","components/General.js","components/Region.js","components/Pref.js","WeatherInfoSidebar.js","code.js","SelectedLayer.js","WeatherInfoLayer.js","WeatherInfo.js","Map.js","App.js","index.js"],"names":["reportTime","t","pad","getMonth","getDate","getHours","getMinutes","x","slice","GeneralIndex","react_default","a","createElement","className","Header","as","List","inverted","relaxed","this","renderInfo","info","props","Date","now","datetime","period","title","time_str","parseInt","id","Item","onClick","Content","Description","headline","renderNone","Component","RegionList","_this","keys","Object","regions","sort","map","code","region","time","filter","d","length","RegionList_AccordionListHeadline","AccordionListHeadline","state","activeIndex","handleClick","e","titleProps","index","newIndex","_this2","setState","_this3","Accordion","i","_this4","key","Title","active","Icon","name","InfoHeader","jmaCode","url","concat","window","open","children","Button","icon","size","renderBreadcrumb","bread","Breadcrumb","item","Fragment","Divider","Section","link","Detail","detail","fetch","prevProps","show","then","res","json","data","console","log","comment","replace","s","String","fromCharCode","charCodeAt","AccordionList","split","pdf","renderDetail","src","type","width","height","href","target","rel","Detail_Detail","General","Header_InfoHeader","navigate","AccordionList_AccordionList","Region","regionTitle","jmaCodeTable","renderContent","010100","010200","010300","010400","010500","010600","010700","010800","010900","011000","011100","Pref","prefTitle","prefName","prefRegion","WeatherInfoSidebar","area","selectRegion","onSelectRegion","Sidebar","animation","direction","vertical","visible","renderShow","renderIndex","GeneralIndex_GeneralIndex","general","RegionList_RegionList","renderGeneral","renderRegion","renderPref","General_General","Region_Region","Pref_Pref","prefs","hokkaidoPrefCodes","012000","013000","014100","014030","015000","016000","017000","hokkaidoPrefNames","izuOgasawara","SelectedLayer","onSelected","classCallCheck","addSelectedLayer","on","onClickTokyo","_addSelectedLayer","addLayer","source","source-layer","paint","line-color","line-width","features","properties","_this$getCode","getCode","selectPref","select","prefCode","substr","includes","codes","forEach","l","setFilter","toConsumableArray","WeatherInfoLayer","hover","html","queryRenderedFeatures","point","layers","getCanvas","style","cursor","infos","weatherInfo","getTimeBefore","popup","setLngLat","lngLat","setHTML","addTo","remove","addSource","minzoom","maxzoom","tiles","renderWeatherInfoPrefs","addRegion","selectedLayer","mapboxgl","Popup","closeButton","tokyo","stops","pref","_step","_iterator","_createForOfIteratorHelper","n","done","c","value","push","getColor","err","f","fill-color","property","default","renderTokyo","color","arguments","undefined","count","opacity","Math","min","diff","round","WeatherInfo","sidebar","showPref","loadWeatherInfo","timestamp","getTime","mode","layer","WeatherInfoSidebar_WeatherInfoSidebar","ref","el","accessToken","Map","container","mapContainer","zoom","center","hash","attributionControl","child","onload","WeatherInfo_WeatherInfo","App","Map_Map","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98c5e60f.chunk.js","sourcesContent":["\nexport function reportTime(t) {\n    var date = pad(t.getMonth() + 1) + '/' + pad(t.getDate());\n    var time = pad(t.getHours()) + ':' + pad(t.getMinutes());\n    return date + ' ' + time;\n}\n\nfunction pad(x) {\n  return ('0' + x).slice(-2);\n}\n\nexport function hankaku(str) {\n  return str.replace(/[０-９]/g, function(s) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/．/g, '.');\n}\n","import React, { Component } from 'react';\nimport { Header, List } from 'semantic-ui-react';\n\nimport { reportTime } from '../util'\n\nexport default class GeneralIndex extends Component {\n\n  render() {\n    return (\n      <div className=\"info-general\">\n        <Header as='h3'>全般</Header>\n        <List inverted relaxed>\n          {this.renderInfo()}\n        </List>\n      </div>\n    );\n  }\n  \n  renderInfo() {\n    const info = this.props.info[0];\n\n    if (info && (Date.now() - new Date(info.datetime)) <= this.props.period * 3600 * 1000){\n      const title = info.title;\n      const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n      return (\n        <List.Item onClick={this.props.onClick} >\n          <List.Content>\n            <List.Header className=\"general-index-title\">{title}</List.Header>\n            <List.Description>{time_str}</List.Description>\n            <p className=\"info-list-headline\">{info.headline}</p>\n          </List.Content>\n        </List.Item>\n      );\n    } else {\n      return this.renderNone();\n    }\n  }\n\n  renderNone() {\n    return <p>過去{this.props.period}時間に発表された情報はありません</p>;\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Header, Accordion, Icon } from 'semantic-ui-react';\n\nimport { reportTime } from '../util'\n\n\nexport default class RegionList extends Component {\n  render() {\n    const keys = Object.keys(this.props.regions).sort();\n    const now = Date.now();\n    const regions = keys.map(code => {\n      const region = this.props.regions[code][0];\n      const time = new Date(region.datetime);\n\n      if ((now - time) <= this.props.period * 3600 * 1000){\n        region.code = code;\n        return region;\n      } else {\n        return null;\n      }\n    }).filter(d => d);\n\n    return (\n      <div>\n        <Header as='h3'>地方</Header>\n        {regions.length > 0 ?\n          <AccordionListHeadline info={regions} onClick={this.props.onClick} />\n        :this.renderNone()}\n      </div>\n    );\n  }\n  \n  renderNone() {\n    return <p>過去{this.props.period}時間に発表された情報はありません</p>;\n  }\n}\n\n\nclass AccordionListHeadline extends Component {\n  state = { activeIndex: null }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    return (\n      <Accordion inverted>\n        {this.props.info.map((info, i) => this.renderInfo(info, i))}\n      </Accordion>\n    );\n  }\n\n  renderInfo(info, i) {\n    const { activeIndex } = this.state;\n    const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n\n    return <div key={i} className=\"accordion-item\">\n      <Accordion.Title\n        active={activeIndex === i}\n        index={i}\n        onClick={this.handleClick}\n      >\n        <Icon name='dropdown' />\n        <span className=\"info-title\">{info.title}</span>\n        <p className=\"info-time\">{time_str}</p>\n      </Accordion.Title>\n      <Accordion.Content\n        active={activeIndex === i}\n        onClick={() => this.props.onClick(info.code)}\n      >\n        <p className=\"info-region-headline\">{info.headline}</p>\n      </Accordion.Content>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Header, Button, Breadcrumb } from 'semantic-ui-react';\n\n\nexport default class InfoHeader extends Component {\n  onClick = () => {\n    const code = this.props.jmaCode;\n    const page = code === 'index' ? '' : code + '_';\n    const url = `https://www.jma.go.jp/jp/kishojoho/${page}index.html`;\n    window.open(url, '_blank', 'noopener');\n  }\n\n  render() {\n    return (\n      <div className=\"info-header\">\n        <Header as='h3'>\n          {this.props.children}\n          <Button className=\"info-header-link\" icon='linkify' inverted size='mini' onClick={this.onClick} />\n        {this.renderBreadcrumb()}\n        </Header>\n\n      </div>\n    );\n  }\n  \n  renderBreadcrumb() {\n    if (this.props.bread) {\n      return (\n        <Breadcrumb className=\"info-breadcrumb\">\n          {this.props.bread.map((item, i) => {\n            return (\n              <React.Fragment key={i}>\n                {i > 0 ? <Breadcrumb.Divider /> : null}\n                <Breadcrumb.Section link onClick={item.onClick}>\n                  {item.title}\n                </Breadcrumb.Section>\n              </React.Fragment>\n            );\n          })}\n        </Breadcrumb>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n","import React, { Component } from 'react';\n\nimport { hankaku } from '../util';\nconst bucket = 'https://storage.googleapis.com/weather-info/d/';\n\nexport default class Detail extends Component {\n  state = { detail: null }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show && !prevProps.show) this.fetch();\n  }\n\n  fetch() {\n    if (!this.props.show) return;\n    fetch(bucket + this.props.id + '.json')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ detail: data });\n      });\n  }\n\n  render() {\n    if (!this.state.detail) return null;\n\n    return (\n      <div className=\"info-detail\">\n        {hankaku(this.state.detail.comment)}\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Divider } from 'semantic-ui-react';\n\nimport { reportTime } from '../util';\nimport Detail from './Detail';\n\nconst bucket = 'https://storage.googleapis.com/weather-info/pdf/';\n\n\nexport default class AccordionList extends Component {\n  state = { activeIndex: 0 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    return (\n      <Accordion inverted>\n        {this.props.info.map((info, i) => this.renderInfo(info, i))}\n      </Accordion>\n    );\n  }\n\n  renderInfo(info, i) {\n    const { activeIndex } = this.state;\n    const title = info.title.split('に関する')[0];\n    const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n\n    return <div key={i} className=\"accordion-item\">\n      <Accordion.Title\n        active={activeIndex === i}\n        index={i}\n        onClick={this.handleClick}\n      >\n        <Icon name='dropdown' />\n        <span className=\"info-title\">{title} {info.pdf ? <Icon name=\"file pdf outline\" size=\"tiny\"/>: null}</span>\n        <p className=\"info-time\">{time_str}</p>\n        <p className=\"accordion-item-title\">{info.headline}</p>\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === i} >\n        {this.renderDetail(info, activeIndex === i)}\n      </Accordion.Content>\n    </div>;\n  }\n\n  renderDetail(info, active) {\n    if (info.pdf) {\n      const url = bucket + info.pdf;\n      return <div>\n        <embed src={url} type=\"application/pdf\" width=\"100%\" height=\"400px\" />\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">図形式</a>\n      </div>;\n\n    } else {\n      return (\n        <>\n          <Divider />\n          <Detail key={info.id} id={info.id} show={active} />\n          <Divider />\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport AccordionList from './AccordionList';\n\n\nexport default class General extends Component {\n  render() {\n    return (\n      <div className=\"info-pref\">\n        <Header\n          jmaCode=\"index\"\n          bread={[\n            { title: 'Home', onClick: () => this.props.navigate('index') },\n          ]}\n        >\n          全般気象情報\n        </Header>\n        <AccordionList info={this.props.info} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport AccordionList from './AccordionList';\n\n\nexport default class Region extends Component {\n  render() {\n    const regionTitle = this.props.name ? this.props.name + '気象情報' :\n      this.props.info[0].title.split('に関する')[1];\n    console.log(this.props.code);\n    const jmaCode = jmaCodeTable[this.props.code];\n\n    return (\n      <div className=\"info-pref\">\n        <Header jmaCode={jmaCode}\n          bread={[\n            { title: 'Home', onClick: () => this.props.navigate('index') },\n          ]}\n        >\n          {regionTitle}\n        </Header>\n        {this.props.info ? this.renderContent(regionTitle) : this.renderNone()}\n      </div>\n    );\n  }\n  \n  renderContent(key) {\n    return (\n      <AccordionList info={this.props.info} key={key} />\n    );\n  }\n  \n  renderNone() {\n    return (\n      <p>過去{this.props.period}時間に発表された情報はありません</p>\n    );\n  }\n}\n\nconst jmaCodeTable = {\n  // regions\n  '010100': '101',\n  '010200': '102',\n  '010300': '103',\n  '010400': '105',\n  '010500': '104',\n  '010600': '106',\n  '010700': '107',\n  '010800': '108',\n  '010900': '109',\n  '011000': '110',\n  '011100': '111',\n};\n","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport AccordionList from './AccordionList';\nimport prefRegion from './pref-region.json';\n\nexport default class Pref extends Component {\n  render() {\n    const prefTitle = this.props.prefName + '気象情報';\n    const jmaCode = prefRegion[this.props.code].jmaCode;\n    const region = prefRegion[this.props.code].region;\n\n    return (\n      <div className=\"info-pref\">\n        <Header\n          jmaCode={jmaCode}\n          bread={[\n            { title: 'Home', onClick: () => this.props.navigate('index') },\n            { title: region.name, onClick: () => this.props.navigate('region', region) },\n          ]}\n        >\n          {prefTitle}\n        </Header>\n        {this.props.info ? this.renderContent(prefTitle) : this.renderNone()}\n      </div>\n    );\n  }\n\n  renderContent(key) {\n    return (\n      <AccordionList info={this.props.info} key={key} />\n    );\n  }\n  \n  renderNone() {\n    return (\n      <p>過去{this.props.period}時間に発表された情報はありません</p>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Sidebar, Header } from 'semantic-ui-react';\n\nimport './Sidebar.css';\n\nimport GeneralIndex from './components/GeneralIndex';\nimport RegionList from './components/RegionList';\n\nimport General from './components/General';\nimport Region from './components/Region';\nimport Pref from './components/Pref';\n\nexport default class WeatherInfoSidebar extends Component {\n  state = { show: null }; // { type, code }\n\n  render() {\n    return (\n      <Sidebar\n        animation='overlay'\n        direction='right'\n        className='sidebar-dark'\n        inverted='true'\n        vertical='true'\n        visible>\n        {this.state.show ? this.renderShow() : this.renderIndex()}\n      </Sidebar>\n    );\n  }\n\n  renderIndex() {\n    return (\n      <div>\n        <Header as='h2'>気象情報</Header>\n        {this.props.data ?\n          <>\n            <GeneralIndex\n              info={this.props.data.general}\n              period={this.props.period}\n              onClick={() => this.setState({ show: { type: 'general' } })}\n            />\n            <RegionList\n              regions={this.props.data.regions}\n              period={this.props.period}\n              onClick={this.selectRegion}\n            />\n          </>\n        : null}\n      </div>\n    );\n  }\n\n  navigate = (type, area) => {\n    if (type === 'index') {\n      this.setState({ show: null });\n\n    } else if (type === 'region') {\n      this.selectRegion(area.code, area.name);\n    } \n  }\n\n  selectRegion = (code, name) => {\n    this.setState({ show: { type: 'region', code, name } });\n    this.props.onSelectRegion(code);\n  }\n\n  showPref(code, prefName) {\n    this.setState({ show: { type: 'pref', code, prefName } });\n  }\n\n  renderShow() {\n    const show = this.state.show;\n    console.log(show);\n    if (show.type === 'general') {\n      return this.renderGeneral();\n\n    } else if (show.type === 'region') {\n      return this.renderRegion(show.code, show.name);\n\n    } else if (show.type === 'pref') {\n      return this.renderPref(show.code, show.prefName);\n    }\n  }\n  \n  renderGeneral() {\n    if (this.props.data && this.props.data.general) {\n      return (\n        <General\n          info={this.props.data.general}\n          navigate={this.navigate}\n        />\n      );\n    }\n  }\n  \n  renderRegion(code, name) {\n    if (this.props.data) {\n      return (\n        <Region\n          code={code}\n          info={this.props.data.regions[code]}\n          name={name}\n          period={this.props.period}\n          navigate={this.navigate}\n        />\n      );\n    }\n  }\n\n  renderPref(code, prefName) {\n    if (this.props.data) {\n      return (\n        <Pref\n          code={code}\n          info={this.props.data.prefs[code]}\n          prefName={prefName}\n          period={this.props.period}\n          navigate={this.navigate}\n        />\n      );\n    }\n  }\n}\n\n\n","\nexport const hokkaidoPrefCodes = {\n  \"011000\": [\"011000\"], // 宗谷地方\n  \"012000\": [\n    \"012010\", // 上川地方\n    \"012020\"  // 留萌地方\n  ],\n  \"013000\": [\"013000\"], // 網走・北見・紋別地方\n  \"014100\": [\n    \"014020\", // 釧路地方\n    \"014010\"  // 根室地方\n  ],\n  \"014030\": [\"014030\"], // 十勝地方\n  \"015000\": [\n    \"015010\", // 胆振地方\n    \"015020\"  // 日高地方\n  ],\n  \"016000\": [\n    \"016010\", // 石狩地方\n    \"016020\", // 空知地方\n    \"016030\"  // 後志地方\n  ],\n  \"017000\": [\n    \"017010\", // 渡島地方\n    \"017020\"  // 檜山地方\n  ]\n};\n\nexport const hokkaidoPrefNames = {\n  \"011000\": \"宗谷地方\",\n  \"012000\": \"上川・留萌地方\",\n  \"013000\": \"網走・北見・紋別地方\",\n  \"014100\": \"釧路・根室地方\",\n  \"014030\": \"十勝地方\",\n  \"015000\": \"胆振・日高地方\",\n  \"016000\": \"石狩・空知・後志地方\",\n  \"017000\": \"渡島・檜山地方\"\n};\n\n\n// 130100\nexport const izuOgasawara = [\n  '130020', // 伊豆諸島北部\n  '130030', // 伊豆諸島南部\n  '130040', // 小笠原諸島\n];\n","import { hokkaidoPrefCodes, hokkaidoPrefNames, izuOgasawara } from './code';\n\nexport default class SelectedLayer {\n  constructor(map, onSelected) {\n    this.map = map;\n    this.onSelected = onSelected;\n\n    this.addSelectedLayer();\n    this.map.on('click', 'weather-info-pref', (e) => {\n      this.onClick(e);\n    });\n    this.map.on('click', 'weather-info-tokyo', (e) => {\n      this.onClickTokyo(e);\n    });\n  }\n\n  addSelectedLayer() {\n    this._addSelectedLayer('pref');\n    this._addSelectedLayer('distlict');\n    this._addSelectedLayer('region');\n  }\n  \n  _addSelectedLayer(type) {\n    this.map.addLayer({\n      \"id\": type + \"-line-selected\",\n      \"type\": \"line\",\n      \"source\": type === \"region\" ? \"region-vt\" : \"vt\",\n      \"source-layer\": type,\n      \"paint\": {\n        \"line-color\": \"rgba(70, 171, 199, 0.8)\",\n        \"line-width\": 1\n      },\n      filter: [\"==\", \"code\", \"0\"]\n    });\n  }\n\n  onClick(e) {\n    if (e.features) {\n      console.log(e.features[0].properties);\n      const { code, name } = this.getCode(e.features[0].properties.code);\n      const prefName = name || e.features[0].properties.name;\n      this.selectPref(code);\n      this.onSelected(code, prefName);\n    }\n  }\n\n  onClickTokyo(e) {\n    if (e.features) {\n      console.log(e.features[0].properties);\n      const prefName = '伊豆・小笠原諸島';\n      this.select('distlict', izuOgasawara);\n      this.onSelected('130100', prefName);\n    }\n  }\n\n  getCode(prefCode) {\n    if (prefCode.substr(0, 2) === '01') {\n      for (let code in hokkaidoPrefCodes) {\n        if (hokkaidoPrefCodes[code].includes(prefCode)) {\n          const name = hokkaidoPrefNames[code];\n          return { code, name };\n        }\n      }\n\n    } else {\n      return { code: prefCode };\n    }\n  }\n\n  selectPref(code) {\n    let filter = [code];\n    if (code in hokkaidoPrefCodes){\n      filter = hokkaidoPrefCodes[code];\n    }\n    this.select('pref', filter);\n  }\n\n  selectRegion(code) {\n    this.select('region', [code]);\n  }\n  \n  select(type, codes) {\n    ['pref', 'distlict', 'region'].forEach(l => {\n      const filter = l === type ? codes : ['0'];\n      this.map.setFilter(l + '-line-selected', ['in', 'code', ...filter]);\n    });\n  }\n}\n","import mapboxgl from 'mapbox-gl';\nimport SelectedLayer from './SelectedLayer';\nimport { hokkaidoPrefCodes, izuOgasawara } from './code';\n\n\nexport default class WeatherInfoLayer {\n  constructor(map, data, period, onSelected) {\n    this.map = map;\n    this.weatherInfo = data;\n    this.period = period;\n\n    this.map.addSource(\"vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 10,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/v2/{z}/{x}/{y}.pbf\"]\n    });\n\n    this.map.addLayer({\n      \"id\": \"pref-line\",\n      \"type\": \"line\",\n      \"source\": \"vt\",\n      \"source-layer\": \"pref\",\n      \"paint\": {\n        \"line-color\": \"rgba(55, 55, 55, 0.4)\"\n      }\n    });\n    this.renderWeatherInfoPrefs();\n \n    this.addRegion();\n    this.selectedLayer =  new SelectedLayer(map, onSelected);\n\n    this.popup = new mapboxgl.Popup({\n      closeButton: false\n\t  });\n    this.map.on('mousemove', this.hover);\n  }\n\n  selectRegion(code) {\n    this.selectedLayer.selectRegion(code);\n  }\n\n  addRegion() {\n    this.map.addSource(\"region-vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 8,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/region/{z}/{x}/{y}.pbf\"]\n    });\n  }\n\n\n  renderWeatherInfoPrefs() {\n    const now = Date.now();\n    var stops = [];\n    let tokyo;\n\n    for (let code in this.weatherInfo.prefs){\n      const pref = this.weatherInfo.prefs[code];\n      const time = new Date(pref[0].datetime);\n\n      if ((now - time) <= this.period * 3600 * 1000){\n        if (code in hokkaidoPrefCodes){\n          for (let c of hokkaidoPrefCodes[code]){\n            stops.push([c, this.getColor(pref.length)]);\n          }\n\n        } else if (code === '130100') {\n          tokyo = this.getColor(pref.length);\n\n        } else {\n          stops.push([code, this.getColor(pref.length)]);\n        }\n      }\n    }\n\n    this.map.addLayer({\n      \"id\": \"weather-info-pref\",\n      \"type\": \"fill\",\n      \"source\": \"vt\",\n      \"source-layer\": \"pref\",\n      \"paint\": {\n        \"fill-color\": {\n          \"property\": \"code\",\n          \"type\": \"categorical\",\n          \"stops\": stops,\n          \"default\": \"rgba(0, 0, 0, 0)\"\n        },\n      }\n    });\n    this.renderTokyo(tokyo);\n  }\n\n  renderTokyo(color = 'rgba(0, 0, 0, 0)') {\n    this.map.addLayer({\n      \"id\": \"weather-info-tokyo\",\n      \"type\": \"fill\",\n      \"source\": \"vt\",\n      \"source-layer\": \"distlict\",\n      \"paint\": {\n        \"fill-color\": color,\n      },\n      \"filter\": [\"in\", \"code\"].concat(izuOgasawara)\n    });\n  }\n\n  getColor(count) {\n    const opacity = Math.min(0.1 + 0.05 * count, 0.8);\n    return `rgba(70, 171, 199, ${opacity})`;\n  }\n\n  hover = (e) => {\n    const features = this.map.queryRenderedFeatures(e.point, { layers: ['weather-info-pref', 'weather-info-tokyo'] });\n    this.map.getCanvas().style.cursor = (features.length) ? 'crosshair' : '';\n\n    let html;\n    if (features.length) {\n      const code = this.getCode(features[0].properties.code);\n      const infos = this.weatherInfo.prefs[code];\n      if (infos) {\n        const title = infos[0].title.split('に関する')[0];\n        html = title + '<br/><span>' + this.getTimeBefore(infos[0]) + '</span>';\n      }\n    }\n    \n    if (html) {\n      this.popup.setLngLat(e.lngLat)\n        .setHTML(html)\n        .addTo(this.map);\n    } else {\n\t\t\tthis.popup.remove();\n\t\t}\n  }\n  \n  getCode(prefCode) {\n    if (prefCode.substr(0, 2) === '01') {\n      for (let code in hokkaidoPrefCodes) {\n        if (hokkaidoPrefCodes[code].includes(prefCode)) return code;\n      }\n    } else {\n      return prefCode;\n    }\n  }\n\n  getTimeBefore(info) {\n    const diff = Date.now() - new Date(info.datetime);\n    if (diff < 60 * 60 * 1000) {\n      const minutes = Math.round(diff / 60 / 1000);\n      return minutes + '分前';\n    } else {\n      const hours = Math.round(diff / 60 / 60 / 1000);\n      return hours + '時間前';\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport WeatherInfoSidebar from './WeatherInfoSidebar';\nimport WeatherInfoLayer from './WeatherInfoLayer';\n\nconst url = 'https://storage.googleapis.com/weather-info/weather-info-all.json';\n\nexport default class WeatherInfo extends Component {\n  state = {\n    info: null,\n  };\n\n  componentDidMount() {\n    this.loadWeatherInfo();\n  }\n\n  onload(map) {\n    this.map = map;\n    this.addLayer();\n  }\n  \n  loadWeatherInfo() {\n    const timestamp = new Date().getTime();\n    fetch(url + '?' + timestamp, {mode: 'cors'})\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ info: data });\n        this.weatherInfo = data;\n        this.addLayer();\n      });\n  }\n\n  addLayer() {\n    if (!this.map || !this.weatherInfo) return;\n    this.layer = new WeatherInfoLayer(this.map, this.weatherInfo, this.props.period, this.onSelected);\n  }\n\n  render() {\n    return (\n      <WeatherInfoSidebar\n        data={this.state.info}\n        period={this.props.period}\n        ref={el => this.sidebar = el}\n        onSelectRegion={(code) => this.layer.selectRegion(code)}\n      />\n    );\n  }\n\n  onSelected = (code, prefName) => {\n    this.sidebar.showPref(code, prefName);\n  }\n}\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport WeatherInfo from './WeatherInfo';\nimport './Map.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidGF0dGlpIiwiYSI6ImNqZWZ4eWM3NTI2cGszM2xpYXEyZndpd3IifQ.ifzbR45HecVGxChbdR2hiw';\n\n\nexport default class Map extends Component {\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/tattii/cj1bob6hw003t2rr5s2svi3iq',\n      zoom: 4.2,\n      center: [136.6 + 10, 35.5],\n      hash: true,\n      attributionControl: false\n    });\n\n    this.map.on('load', () => {\n      this.child.onload(this.map);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div ref={el => this.mapContainer = el} id=\"map\" />\n        <WeatherInfo\n          ref={ref => this.child = ref}\n          period={48}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport Map from './Map';\n\nclass App extends Component {\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n"],"sourceRoot":""}