{"version":3,"sources":["util.js","components/GeneralIndex.js","components/RegionList.js","components/Header.js","components/Detail.js","components/AccordionList.js","components/General.js","components/Region.js","components/Pref.js","WeatherInfoSidebar.js","WeatherInfoLayer.js","WeatherInfo.js","Map.js","App.js","index.js"],"names":["reportTime","t","pad","getMonth","getDate","getHours","getMinutes","x","slice","GeneralIndex","react_default","a","createElement","className","Header","as","List","inverted","relaxed","this","renderInfo","info","props","Date","now","datetime","period","title","time_str","parseInt","id","Item","onClick","Content","Description","headline","renderNone","Component","RegionList","_this","keys","Object","regions","sort","map","code","region","time","filter","d","length","RegionList_AccordionListHeadline","AccordionListHeadline","state","activeIndex","handleClick","e","titleProps","index","newIndex","_this2","setState","_this3","Accordion","i","_this4","key","Title","active","Icon","name","InfoHeader","jmaCode","url","concat","window","open","children","Button","icon","size","Detail","detail","fetch","prevProps","show","then","res","json","data","console","log","comment","replace","s","String","fromCharCode","charCodeAt","AccordionList","split","pdf","renderDetail","src","type","width","height","href","target","rel","Fragment","Divider","Detail_Detail","General","Header_InfoHeader","AccordionList_AccordionList","Region","regionTitle","jmaCodeTable","010100","010200","010300","010400","010500","010600","010700","010800","010900","011000","011100","Pref","prefTitle","prefName","prefRegion","renderBreadcrumb","renderContent","Breadcrumb","Section","link","WeatherInfoSidebar","selectRegion","onSelectRegion","Sidebar","animation","direction","vertical","visible","renderShow","renderIndex","GeneralIndex_GeneralIndex","general","RegionList_RegionList","renderGeneral","renderRegion","renderPref","General_General","Region_Region","Pref_Pref","prefs","WeatherInfoLayer","onSelected","classCallCheck","weatherInfo","addSource","minzoom","maxzoom","tiles","addLayer","source","source-layer","paint","line-color","renderWeatherInfoPrefs","line-width","addRegion","on","stops","pref","hokkaidoPrefCodes","_step","_iterator","_createForOfIteratorHelper","n","done","c","value","push","getColor","err","f","fill-color","property","default","count","opacity","Math","min","features","properties","getCode","prefCode","select","substr","includes","setFilter","toConsumableArray","012000","013000","014100","014030","015000","016000","017000","WeatherInfo","sidebar","showPref","loadWeatherInfo","timestamp","getTime","mode","layer","WeatherInfoSidebar_WeatherInfoSidebar","ref","el","mapboxgl","accessToken","Map","container","mapContainer","style","zoom","center","hash","attributionControl","child","onload","WeatherInfo_WeatherInfo","App","Map_Map","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5176023f.chunk.js","sourcesContent":["\nexport function reportTime(t) {\n    var date = pad(t.getMonth() + 1) + '/' + pad(t.getDate());\n    var time = pad(t.getHours()) + ':' + pad(t.getMinutes());\n    return date + ' ' + time;\n}\n\nfunction pad(x) {\n  return ('0' + x).slice(-2);\n}\n\nexport function hankaku(str) {\n  return str.replace(/[０-９]/g, function(s) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/．/g, '.');\n}\n","import React, { Component } from 'react';\nimport { Header, List } from 'semantic-ui-react';\n\nimport { reportTime } from '../util'\n\nexport default class GeneralIndex extends Component {\n\n  render() {\n    return (\n      <div className=\"info-general\">\n        <Header as='h3'>全般</Header>\n        <List inverted relaxed>\n          {this.renderInfo()}\n        </List>\n      </div>\n    );\n  }\n  \n  renderInfo() {\n    const info = this.props.info[0];\n\n    if (info && (Date.now() - new Date(info.datetime)) <= this.props.period * 3600 * 1000){\n      const title = info.title;\n      const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n      return (\n        <List.Item onClick={this.props.onClick} >\n          <List.Content>\n            <List.Header className=\"general-index-title\">{title}</List.Header>\n            <List.Description>{time_str}</List.Description>\n            <p className=\"info-list-headline\">{info.headline}</p>\n          </List.Content>\n        </List.Item>\n      );\n    } else {\n      return this.renderNone();\n    }\n  }\n\n  renderNone() {\n    return <p>過去{this.props.period}時間に発表された情報はありません</p>;\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Header, Accordion, Icon } from 'semantic-ui-react';\n\nimport { reportTime } from '../util'\n\n\nexport default class RegionList extends Component {\n  render() {\n    const keys = Object.keys(this.props.regions).sort();\n    const now = Date.now();\n    const regions = keys.map(code => {\n      const region = this.props.regions[code][0];\n      const time = new Date(region.datetime);\n\n      if ((now - time) <= this.props.period * 3600 * 1000){\n        region.code = code;\n        return region;\n      }\n    }).filter(d => d);\n\n    return (\n      <div>\n        <Header as='h3'>地方</Header>\n        {regions.length > 0 ?\n          <AccordionListHeadline info={regions} onClick={this.props.onClick} />\n        :this.renderNone()}\n      </div>\n    );\n  }\n  \n  renderNone() {\n    return <p>過去{this.props.period}時間に発表された情報はありません</p>;\n  }\n}\n\n\nclass AccordionListHeadline extends Component {\n  state = { activeIndex: null }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    return (\n      <Accordion inverted>\n        {this.props.info.map((info, i) => this.renderInfo(info, i))}\n      </Accordion>\n    );\n  }\n\n  renderInfo(info, i) {\n    const { activeIndex } = this.state;\n    const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n\n    return <div key={i} className=\"accordion-item\">\n      <Accordion.Title\n        active={activeIndex === i}\n        index={i}\n        onClick={this.handleClick}\n      >\n        <Icon name='dropdown' />\n        <span className=\"info-title\">{info.title}</span>\n        <p className=\"info-time\">{time_str}</p>\n      </Accordion.Title>\n      <Accordion.Content\n        active={activeIndex === i}\n        onClick={() => this.props.onClick(info.code)}\n      >\n        <p className=\"info-region-headline\">{info.headline}</p>\n      </Accordion.Content>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Header, Button } from 'semantic-ui-react';\n\n\nexport default class InfoHeader extends Component {\n  onClick = () => {\n    const code = this.props.jmaCode;\n    const page = code === 'index' ? '' : code + '_';\n    const url = `https://www.jma.go.jp/jp/kishojoho/${page}index.html`;\n    window.open(url, '_blank', 'noopener');\n  }\n\n  render() {\n    return (\n      <div className=\"info-header\">\n        <Header as='h3'>\n          {this.props.children}\n          <Button className=\"info-header-link\" icon='linkify' inverted size='mini' onClick={this.onClick} />\n        </Header>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n\nimport { hankaku } from '../util';\nconst bucket = 'https://storage.googleapis.com/weather-info/d/';\n\nexport default class Detail extends Component {\n  state = { detail: null }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show && !prevProps.show) this.fetch();\n  }\n\n  fetch() {\n    if (!this.props.show) return;\n    fetch(bucket + this.props.id + '.json')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ detail: data });\n      });\n  }\n\n  render() {\n    if (!this.state.detail) return null;\n\n    return (\n      <div className=\"info-detail\">\n        {hankaku(this.state.detail.comment)}\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Divider } from 'semantic-ui-react';\n\nimport { reportTime } from '../util';\nimport Detail from './Detail';\n\nconst bucket = 'https://storage.googleapis.com/weather-info/pdf/';\n\n\nexport default class AccordionList extends Component {\n  state = { activeIndex: 0 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    return (\n      <Accordion inverted>\n        {this.props.info.map((info, i) => this.renderInfo(info, i))}\n      </Accordion>\n    );\n  }\n\n  renderInfo(info, i) {\n    const { activeIndex } = this.state;\n    const title = info.title.split('に関する')[0];\n    const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n\n    return <div key={i} className=\"accordion-item\">\n      <Accordion.Title\n        active={activeIndex === i}\n        index={i}\n        onClick={this.handleClick}\n      >\n        <Icon name='dropdown' />\n        <span className=\"info-title\">{title} {info.pdf ? <Icon name=\"file pdf outline\" size=\"tiny\"/>: null}</span>\n        <p className=\"info-time\">{time_str}</p>\n        <p>{info.headline}</p>\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === i} >\n        {this.renderDetail(info, activeIndex === i)}\n      </Accordion.Content>\n    </div>;\n  }\n\n  renderDetail(info, active) {\n    if (info.pdf) {\n      const url = bucket + info.pdf;\n      return <div>\n        <embed src={url} type=\"application/pdf\" width=\"100%\" height=\"400px\" />\n        <a href={url} target=\"_blank\" rel=\"noopener\">図形式</a>\n      </div>;\n\n    } else {\n      return (\n        <>\n          <Divider />\n          <Detail key={info.id} id={info.id} show={active} />\n          <Divider />\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport AccordionList from './AccordionList';\n\n\nexport default class General extends Component {\n  render() {\n    return (\n      <div className=\"info-pref\">\n        <Header jmaCode=\"index\">全般気象情報</Header>\n        <AccordionList info={this.props.info} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport AccordionList from './AccordionList';\n\n\nexport default class Region extends Component {\n  render() {\n    const regionTitle = this.props.info[0].title.split('に関する')[1];\n    const jmaCode = jmaCodeTable[this.props.code];\n\n    return (\n      <div className=\"info-pref\">\n        <Header jmaCode={jmaCode}>{regionTitle}</Header>\n        <AccordionList info={this.props.info} key={regionTitle} />\n      </div>\n    );\n  }\n}\n\nconst jmaCodeTable = {\n  // regions\n  '010100': '101',\n  '010200': '102',\n  '010300': '103',\n  '010400': '105',\n  '010500': '104',\n  '010600': '106',\n  '010700': '107',\n  '010800': '108',\n  '010900': '109',\n  '011000': '110',\n  '011100': '111',\n};\n","import React, { Component } from 'react';\nimport { Breadcrumb } from 'semantic-ui-react';\n\nimport Header from './Header';\nimport AccordionList from './AccordionList';\nimport prefRegion from './pref-region.json';\n\nexport default class Pref extends Component {\n  render() {\n    const prefTitle = this.props.prefName + '気象情報';\n    const jmaCode = prefRegion[this.props.code].jmaCode;\n\n    return (\n      <div className=\"info-pref\">\n        {this.renderBreadcrumb()}\n        <Header jmaCode={jmaCode}>{prefTitle}</Header>\n        {this.props.info ? this.renderContent(prefTitle) : this.renderNone()}\n      </div>\n    );\n  }\n\n  renderBreadcrumb() {\n    const region = prefRegion[this.props.code].region;\n    console.log(region);\n    return (\n      <Breadcrumb className=\"pref-breadcrumb\">\n        <Breadcrumb.Section link>Home</Breadcrumb.Section>\n        <Breadcrumb.Divider />\n        <Breadcrumb.Section link>{region.name}</Breadcrumb.Section>\n      </Breadcrumb>\n    );\n  }\n\n  renderContent(prefTitle) {\n    return (\n      <AccordionList info={this.props.info} key={prefTitle} />\n    );\n  }\n  \n  renderNone() {\n    return (\n      <p>過去{this.props.period}時間に発表された情報はありません</p>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Sidebar, Header } from 'semantic-ui-react';\n\nimport './Sidebar.css';\n\nimport GeneralIndex from './components/GeneralIndex';\nimport RegionList from './components/RegionList';\n\nimport General from './components/General';\nimport Region from './components/Region';\nimport Pref from './components/Pref';\n\nexport default class WeatherInfoSidebar extends Component {\n  state = { show: null }; // { type, code }\n\n  render() {\n    return (\n      <Sidebar\n        animation='overlay'\n        direction='right'\n        className='sidebar-dark'\n        inverted='true'\n        vertical='true'\n        visible>\n        {this.state.show ? this.renderShow() : this.renderIndex()}\n      </Sidebar>\n    );\n  }\n\n  renderIndex() {\n    return (\n      <div>\n        <Header as='h2'>気象情報</Header>\n        {this.props.data ?\n          <>\n            <GeneralIndex\n              info={this.props.data.general}\n              period={this.props.period}\n              onClick={() => this.setState({ show: { type: 'general' } })}\n            />\n            <RegionList\n              regions={this.props.data.regions}\n              period={this.props.period}\n              onClick={this.selectRegion}\n            />\n          </>\n        : null}\n      </div>\n    );\n  }\n\n  selectRegion = (code) => {\n    this.setState({ show: { type: 'region', code } });\n    this.props.onSelectRegion(code);\n  }\n\n  showPref(code, prefName) {\n    this.setState({ show: { type: 'pref', code, prefName } });\n  }\n\n  renderShow() {\n    const show = this.state.show;\n    console.log(show);\n    if (show.type === 'general') {\n      return this.renderGeneral();\n\n    } else if (show.type === 'region') {\n      return this.renderRegion(show.code);\n\n    } else if (show.type === 'pref') {\n      return this.renderPref(show.code, show.prefName);\n    }\n  }\n  \n  renderGeneral() {\n    if (this.props.data && this.props.data.general) {\n      return (\n        <General info={this.props.data.general} />\n      );\n    }\n  }\n  \n  renderRegion(code) {\n    if (this.props.data && this.props.data.regions[code]) {\n      return (\n        <Region info={this.props.data.regions[code]} code={code} />\n      );\n    }\n  }\n\n  renderPref(code, prefName) {\n    if (this.props.data) {\n      return (\n        <Pref\n          code={code}\n          info={this.props.data.prefs[code]}\n          prefName={prefName}\n          period={this.props.period}\n        />\n      );\n    }\n  }\n}\n\n\n","export default class WeatherInfoLayer {\n  constructor(map, data, period, onSelected) {\n    this.map = map;\n    this.weatherInfo = data;\n    this.period = period;\n    this.onSelected = onSelected;\n\n    this.map.addSource(\"pref-vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 10,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/pref/{z}/{x}/{y}.pbf\"]\n    });\n\n    this.map.addLayer({\n      \"id\": \"pref-line\",\n      \"type\": \"line\",\n      \"source\": \"pref-vt\",\n      \"source-layer\": \"prefallgeojson\",\n      \"paint\": {\n        \"line-color\": \"rgba(55, 55, 55, 0.4)\"\n      }\n    });\n    this.renderWeatherInfoPrefs();\n    this.map.addLayer({\n      \"id\": \"pref-line-selected\",\n      \"type\": \"line\",\n      \"source\": \"pref-vt\",\n      \"source-layer\": \"prefallgeojson\",\n      \"paint\": {\n        \"line-color\": \"rgba(70, 171, 199, 0.4)\",\n        \"line-width\": 2\n      },\n      filter: [\"==\", \"prefCode\", \"0\"]\n    });\n    this.addRegion();\n\n    this.map.on('click', 'weather-info-pref', (e) => {\n      this.onClick(e);\n    });\n  }\n\n  addRegion() {\n    this.map.addSource(\"region-vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 8,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/region/{z}/{x}/{y}.pbf\"]\n    });\n\n    this.map.addLayer({\n      \"id\": \"region-line-selected\",\n      \"type\": \"line\",\n      \"source\": \"region-vt\",\n      \"source-layer\": \"region\",\n      \"paint\": {\n        \"line-color\": \"rgba(70, 171, 199, 0.8)\",\n        \"line-width\": 1\n      },\n      filter: [\"==\", \"code\", \"0\"]\n    });\n  }\n\n  renderWeatherInfoPrefs() {\n    const now = Date.now();\n    var stops = [];\n\n    for (let code in this.weatherInfo.prefs){\n      const pref = this.weatherInfo.prefs[code];\n      const time = new Date(pref[0].datetime);\n\n      if ((now - time) <= this.period * 3600 * 1000){\n        if (code in hokkaidoPrefCodes){\n          for (let c of hokkaidoPrefCodes[code]){\n            stops.push([c, this.getColor(pref.length)]);\n          }\n\n        }else{\n          stops.push([code, this.getColor(pref.length)]);\n        }\n      }\n    }\n\n    this.map.addLayer({\n      \"id\": \"weather-info-pref\",\n      \"type\": \"fill\",\n      \"source\": \"pref-vt\",\n      \"source-layer\": \"prefallgeojson\",\n      \"paint\": {\n        \"fill-color\": {\n          \"property\": \"prefCode\",\n          \"type\": \"categorical\",\n          \"stops\": stops,\n          \"default\": \"rgba(0, 0, 0, 0)\"\n        },\n      }\n    });\n  }\n\n  getColor(count) {\n    const opacity = Math.min(0.1 + 0.05 * count, 0.8);\n    return `rgba(70, 171, 199, ${opacity})`;\n  }\n\n  onClick(e) {\n    if (e.features) {\n      console.log(e.features[0].properties);\n      const code = this.getCode(e.features[0].properties.prefCode);\n      const prefName = e.features[0].properties.prefName;\n      this.select(code);\n      this.onSelected(code, prefName);\n    }\n  }\n\n  getCode(prefCode) {\n    if (prefCode.substr(0, 2) === '01') {\n      for (let code in hokkaidoPrefCodes) {\n        if (hokkaidoPrefCodes[code].includes(prefCode)) return code;\n      }\n\n    } else {\n      return prefCode;\n    }\n  }\n\n  select(code) {\n    let filter = [code];\n    if (code in hokkaidoPrefCodes){\n      filter = hokkaidoPrefCodes[code];\n    }\n    this.map.setFilter('pref-line-selected', ['in', 'prefCode', ...filter]);\n    this.map.setFilter('region-line-selected', ['==', 'code', '0']);\n  }\n\n  selectRegion(code) {\n    this.map.setFilter('pref-line-selected', ['==', 'prefCode', '0']);\n    this.map.setFilter('region-line-selected', ['==', 'code', code]);\n  }\n}\n\n\nconst hokkaidoPrefCodes = {\n  \"011000\": [\"011000\"], // 宗谷地方\n  \"012000\": [\n    \"012010\", // 上川地方\n    \"012020\"  // 留萌地方\n  ],\n  \"013000\": [\"013000\"], // 網走・北見・紋別地方\n  \"014100\": [\n    \"014020\", // 釧路地方\n    \"014010\"  // 根室地方\n  ],\n  \"014030\": [\"014030\"], // 十勝地方\n  \"015000\": [\n    \"015010\", // 胆振地方\n    \"015020\"  // 日高地方\n  ],\n  \"016000\": [\n    \"016010\", // 石狩地方\n    \"016020\", // 空知地方\n    \"016030\"  // 後志地方\n  ],\n  \"017000\": [\n    \"017010\", // 渡島地方\n    \"017020\"  // 檜山地方\n  ]\n};\n","import React, { Component } from 'react';\n\nimport WeatherInfoSidebar from './WeatherInfoSidebar';\nimport WeatherInfoLayer from './WeatherInfoLayer';\n\nconst url = 'https://storage.googleapis.com/weather-info/weather-info-all.json';\n\nexport default class WeatherInfo extends Component {\n  state = {\n    info: null,\n  };\n\n  componentDidMount() {\n    this.loadWeatherInfo();\n  }\n\n  onload(map) {\n    this.map = map;\n    this.addLayer();\n  }\n  \n  loadWeatherInfo() {\n    const timestamp = new Date().getTime();\n    fetch(url + '?' + timestamp, {mode: 'cors'})\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ info: data });\n        this.weatherInfo = data;\n        this.addLayer();\n      });\n  }\n\n  addLayer() {\n    if (!this.map || !this.weatherInfo) return;\n    this.layer = new WeatherInfoLayer(this.map, this.weatherInfo, this.props.period, this.onSelected);\n  }\n\n  render() {\n    return (\n      <WeatherInfoSidebar\n        data={this.state.info}\n        period={this.props.period}\n        ref={el => this.sidebar = el}\n        onSelectRegion={(code) => this.layer.selectRegion(code)}\n      />\n    );\n  }\n\n  onSelected = (code, prefName) => {\n    this.sidebar.showPref(code, prefName);\n  }\n}\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport WeatherInfo from './WeatherInfo';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidGF0dGlpIiwiYSI6ImNqZWZ4eWM3NTI2cGszM2xpYXEyZndpd3IifQ.ifzbR45HecVGxChbdR2hiw';\n\n\nexport default class Map extends Component {\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/tattii/cj1bob6hw003t2rr5s2svi3iq',\n      zoom: 4.2,\n      center: [136.6 + 10, 35.5],\n      hash: true,\n      attributionControl: false\n    });\n\n    this.map.on('load', () => {\n      this.child.onload(this.map);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div ref={el => this.mapContainer = el} id=\"map\" />\n        <WeatherInfo\n          ref={ref => this.child = ref}\n          period={48}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport Map from './Map';\n\nclass App extends Component {\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n"],"sourceRoot":""}