{"version":3,"sources":["util.js","components/GeneralIndex.js","components/RegionList.js","components/Detail.js","components/AccordionList.js","components/General.js","components/Region.js","components/Pref.js","WeatherInfoSidebar.js","WeatherInfoLayer.js","WeatherInfo.js","Map.js","App.js","index.js"],"names":["reportTime","t","pad","getMonth","getDate","getHours","getMinutes","x","slice","GeneralIndex","react_default","a","createElement","className","Header","as","List","inverted","relaxed","this","renderInfo","info","props","Date","now","datetime","period","title","time_str","parseInt","id","Item","onClick","Content","Description","headline","renderNone","Component","RegionList","_this","keys","Object","regions","sort","map","code","region","time","filter","d","length","RegionList_AccordionListHeadline","AccordionListHeadline","state","activeIndex","handleClick","e","titleProps","index","newIndex","_this2","setState","_this3","Accordion","i","_this4","key","Title","active","Icon","name","Detail","detail","fetch","prevProps","show","then","res","json","data","console","log","comment","replace","s","String","fromCharCode","charCodeAt","AccordionList","split","pdf","size","renderDetail","url","src","type","width","height","href","target","rel","Fragment","Divider","Detail_Detail","General","AccordionList_AccordionList","Region","regionTitle","Pref","prefTitle","WeatherInfoSidebar","selectRegion","onSelectRegion","Sidebar","animation","direction","vertical","visible","renderShow","renderIndex","GeneralIndex_GeneralIndex","general","RegionList_RegionList","renderGeneral","renderRegion","renderPref","General_General","Region_Region","prefs","Pref_Pref","WeatherInfoLayer","onSelected","classCallCheck","weatherInfo","addSource","minzoom","maxzoom","tiles","addLayer","source","source-layer","paint","line-color","renderWeatherInfoPrefs","line-width","addRegion","on","stops","pref","hokkaidoPrefCodes","_step","_iterator","_createForOfIteratorHelper","n","done","c","value","push","getColor","err","f","fill-color","property","default","count","opacity","Math","min","concat","features","properties","getCode","prefCode","select","substr","includes","setFilter","toConsumableArray","011000","012000","013000","014100","014030","015000","016000","017000","WeatherInfo","sidebar","showPref","loadWeatherInfo","timestamp","getTime","mode","layer","WeatherInfoSidebar_WeatherInfoSidebar","ref","el","mapboxgl","accessToken","Map","container","mapContainer","style","zoom","center","hash","attributionControl","child","onload","WeatherInfo_WeatherInfo","App","Map_Map","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1fee66ee.chunk.js","sourcesContent":["\nexport function reportTime(t) {\n    var date = pad(t.getMonth() + 1) + '/' + pad(t.getDate());\n    var time = pad(t.getHours()) + ':' + pad(t.getMinutes());\n    return date + ' ' + time;\n}\n\nfunction pad(x) {\n  return ('0' + x).slice(-2);\n}\n\nexport function hankaku(str) {\n  return str.replace(/[０-９]/g, function(s) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/．/g, '.');\n}\n","import React, { Component } from 'react';\nimport { Header, List } from 'semantic-ui-react';\n\nimport { reportTime } from '../util'\n\nexport default class GeneralIndex extends Component {\n\n  render() {\n    return (\n      <div className=\"info-general\">\n        <Header as='h3'>全般</Header>\n        <List inverted relaxed>\n          {this.renderInfo()}\n        </List>\n      </div>\n    );\n  }\n  \n  renderInfo() {\n    const info = this.props.info[0];\n\n    if (info && (Date.now() - new Date(info.datetime)) <= this.props.period * 3600 * 1000){\n      const title = info.title;\n      const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n      return (\n        <List.Item onClick={this.props.onClick} >\n          <List.Content>\n            <List.Header className=\"general-index-title\">{title}</List.Header>\n            <List.Description>{time_str}</List.Description>\n            <p className=\"info-list-headline\">{info.headline}</p>\n          </List.Content>\n        </List.Item>\n      );\n    } else {\n      return this.renderNone();\n    }\n  }\n\n  renderNone() {\n    return <p>過去{this.props.period}時間に発表された情報はありません</p>;\n  }\n}\n\n","import React, { Component } from 'react';\nimport { Header, Accordion, Icon } from 'semantic-ui-react';\n\nimport { reportTime } from '../util'\n\n\nexport default class RegionList extends Component {\n  render() {\n    const keys = Object.keys(this.props.regions).sort();\n    const now = Date.now();\n    const regions = keys.map(code => {\n      const region = this.props.regions[code][0];\n      const time = new Date(region.datetime);\n\n      if ((now - time) <= this.props.period * 3600 * 1000){\n        region.code = code;\n        return region;\n      }\n    }).filter(d => d);\n\n    return (\n      <div>\n        <Header as='h3'>地方</Header>\n        {regions.length > 0 ?\n          <AccordionListHeadline info={regions} onClick={this.props.onClick} />\n        :this.renderNone()}\n      </div>\n    );\n  }\n  \n  renderNone() {\n    return <p>過去{this.props.period}時間に発表された情報はありません</p>;\n  }\n}\n\n\nclass AccordionListHeadline extends Component {\n  state = { activeIndex: null }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    return (\n      <Accordion inverted>\n        {this.props.info.map((info, i) => this.renderInfo(info, i))}\n      </Accordion>\n    );\n  }\n\n  renderInfo(info, i) {\n    const { activeIndex } = this.state;\n    const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n\n    return <div key={i} className=\"accordion-item\">\n      <Accordion.Title\n        active={activeIndex === i}\n        index={i}\n        onClick={this.handleClick}\n      >\n        <Icon name='dropdown' />\n        <span className=\"info-title\">{info.title}</span>\n        <p className=\"info-time\">{time_str}</p>\n      </Accordion.Title>\n      <Accordion.Content\n        active={activeIndex === i}\n        onClick={() => this.props.onClick(info.code)}\n      >\n        <p className=\"info-region-headline\">{info.headline}</p>\n      </Accordion.Content>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\n\nimport { hankaku } from '../util';\nconst bucket = 'https://storage.googleapis.com/weather-info/d/';\n\nexport default class Detail extends Component {\n  state = { detail: null }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show && !prevProps.show) this.fetch();\n  }\n\n  fetch() {\n    if (!this.props.show) return;\n    fetch(bucket + this.props.id + '.json')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ detail: data });\n      });\n  }\n\n  render() {\n    if (!this.state.detail) return null;\n\n    return (\n      <div className=\"info-detail\">\n        {hankaku(this.state.detail.comment)}\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport { Accordion, Icon, Divider } from 'semantic-ui-react';\n\nimport { reportTime } from '../util';\nimport Detail from './Detail';\n\nconst bucket = 'https://storage.googleapis.com/weather-info/pdf/';\n\n\nexport default class AccordionList extends Component {\n  state = { activeIndex: 0 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    return (\n      <Accordion inverted>\n        {this.props.info.map((info, i) => this.renderInfo(info, i))}\n      </Accordion>\n    );\n  }\n\n  renderInfo(info, i) {\n    const { activeIndex } = this.state;\n    const title = info.title.split('に関する')[0];\n    const time_str = reportTime(new Date(info.datetime)) + \" 第\" + parseInt(info.id.slice(-3)) + \"号\";\n\n    return <div key={i} className=\"accordion-item\">\n      <Accordion.Title\n        active={activeIndex === i}\n        index={i}\n        onClick={this.handleClick}\n      >\n        <Icon name='dropdown' />\n        <span className=\"info-title\">{title} {info.pdf ? <Icon name=\"file pdf outline\" size=\"tiny\"/>: null}</span>\n        <p className=\"info-time\">{time_str}</p>\n        <p>{info.headline}</p>\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === i} >\n        {this.renderDetail(info, activeIndex === i)}\n      </Accordion.Content>\n    </div>;\n  }\n\n  renderDetail(info, active) {\n    if (info.pdf) {\n      const url = bucket + info.pdf;\n      return <div>\n        <embed src={url} type=\"application/pdf\" width=\"100%\" height=\"400px\" />\n        <a href={url} target=\"_blank\" rel=\"noopener\">図形式</a>\n      </div>;\n\n    } else {\n      return (\n        <>\n          <Divider />\n          <Detail key={info.id} id={info.id} show={active} />\n          <Divider />\n        </>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\n\nimport AccordionList from './AccordionList';\n\n\nexport default class General extends Component {\n  render() {\n    return (\n      <div className=\"info-pref\">\n        <Header as='h3'>全般気象情報</Header>\n        <AccordionList info={this.props.info} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\n\nimport AccordionList from './AccordionList';\n\n\nexport default class Region extends Component {\n  render() {\n    const regionTitle = this.props.info[0].title.split('に関する')[1];\n\n    return (\n      <div className=\"info-pref\">\n        <Header as='h3'>{regionTitle}</Header>\n        <AccordionList info={this.props.info} key={regionTitle} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\n\nimport AccordionList from './AccordionList';\n\n\nexport default class Pref extends Component {\n  render() {\n    const prefTitle = this.props.info[0].title.split('に関する')[1];\n\n    return (\n      <div className=\"info-pref\">\n        <Header as='h3'>{prefTitle}</Header>\n        <AccordionList info={this.props.info} key={prefTitle} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Sidebar, Header } from 'semantic-ui-react';\n\nimport './Sidebar.css';\n\nimport GeneralIndex from './components/GeneralIndex';\nimport RegionList from './components/RegionList';\n\nimport General from './components/General';\nimport Region from './components/Region';\nimport Pref from './components/Pref';\n\nexport default class WeatherInfoSidebar extends Component {\n  state = { show: null }; // { type, code }\n\n  render() {\n    return (\n      <Sidebar\n        animation='overlay'\n        direction='right'\n        className='sidebar-dark'\n        inverted='true'\n        vertical='true'\n        visible>\n        {this.state.show ? this.renderShow() : this.renderIndex()}\n      </Sidebar>\n    );\n  }\n\n  renderIndex() {\n    return (\n      <div>\n        <Header as='h2'>気象情報</Header>\n        {this.props.data ?\n          <>\n            <GeneralIndex\n              info={this.props.data.general}\n              period={this.props.period}\n              onClick={() => this.setState({ show: { type: 'general' } })}\n            />\n            <RegionList\n              regions={this.props.data.regions}\n              period={this.props.period}\n              onClick={this.selectRegion}\n            />\n          </>\n        : null}\n      </div>\n    );\n  }\n\n  selectRegion = (code) => {\n    this.setState({ show: { type: 'region', code } });\n    this.props.onSelectRegion(code);\n  }\n\n  showPref(code) {\n    this.setState({ show: { type: 'pref', code } });\n  }\n\n  renderShow() {\n    const show = this.state.show;\n    console.log(show);\n    if (show.type === 'general') {\n      return this.renderGeneral();\n\n    } else if (show.type === 'region') {\n      return this.renderRegion(show.code);\n\n    } else if (show.type === 'pref') {\n      return this.renderPref(show.code);\n    }\n  }\n  \n  renderGeneral() {\n    if (this.props.data && this.props.data.general) {\n      return (\n        <General info={this.props.data.general} />\n      );\n    }\n  }\n  \n  renderRegion(code) {\n    if (this.props.data && this.props.data.regions[code]) {\n      return (\n        <Region info={this.props.data.regions[code]} />\n      );\n    }\n  }\n\n  renderPref(code) {\n    if (this.props.data && this.props.data.prefs[code]) {\n      return (\n        <Pref info={this.props.data.prefs[code]} />\n      );\n    }\n  }\n}\n\n\n","export default class WeatherInfoLayer {\n  constructor(map, data, period, onSelected) {\n    this.map = map;\n    this.weatherInfo = data;\n    this.period = period;\n    this.onSelected = onSelected;\n\n    this.map.addSource(\"pref-vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 10,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/pref/{z}/{x}/{y}.pbf\"]\n    });\n\n    this.map.addLayer({\n      \"id\": \"pref-line\",\n      \"type\": \"line\",\n      \"source\": \"pref-vt\",\n      \"source-layer\": \"prefallgeojson\",\n      \"paint\": {\n        \"line-color\": \"rgba(55, 55, 55, 0.4)\"\n      }\n    });\n    this.renderWeatherInfoPrefs();\n    this.map.addLayer({\n      \"id\": \"pref-line-selected\",\n      \"type\": \"line\",\n      \"source\": \"pref-vt\",\n      \"source-layer\": \"prefallgeojson\",\n      \"paint\": {\n        \"line-color\": \"rgba(70, 171, 199, 0.4)\",\n        \"line-width\": 2\n      },\n      filter: [\"==\", \"prefCode\", \"0\"]\n    });\n    this.addRegion();\n\n    this.map.on('click', 'weather-info-pref', (e) => {\n      this.onClick(e);\n    });\n  }\n\n  addRegion() {\n    this.map.addSource(\"region-vt\", {\n      \"type\": \"vector\",\n      \"minzoom\": 0,\n      \"maxzoom\": 8,\n      \"tiles\": [\"https://weatherbox.github.io/warning-area-vt/region/{z}/{x}/{y}.pbf\"]\n    });\n\n    this.map.addLayer({\n      \"id\": \"region-line-selected\",\n      \"type\": \"line\",\n      \"source\": \"region-vt\",\n      \"source-layer\": \"region\",\n      \"paint\": {\n        \"line-color\": \"rgba(70, 171, 199, 0.4)\",\n        \"line-width\": 1\n      },\n      filter: [\"==\", \"code\", \"0\"]\n    });\n  }\n\n  renderWeatherInfoPrefs() {\n    const now = Date.now();\n    var stops = [];\n\n    for (let code in this.weatherInfo.prefs){\n      const pref = this.weatherInfo.prefs[code];\n      const time = new Date(pref[0].datetime);\n\n      if ((now - time) <= this.period * 3600 * 1000){\n        if (code in hokkaidoPrefCodes){\n          for (let c of hokkaidoPrefCodes[code]){\n            stops.push([c, this.getColor(pref.length)]);\n          }\n\n        }else{\n          stops.push([code, this.getColor(pref.length)]);\n        }\n      }\n    }\n\n    this.map.addLayer({\n      \"id\": \"weather-info-pref\",\n      \"type\": \"fill\",\n      \"source\": \"pref-vt\",\n      \"source-layer\": \"prefallgeojson\",\n      \"paint\": {\n        \"fill-color\": {\n          \"property\": \"prefCode\",\n          \"type\": \"categorical\",\n          \"stops\": stops,\n          \"default\": \"rgba(0, 0, 0, 0)\"\n        },\n      }\n    });\n  }\n\n  getColor(count) {\n    const opacity = Math.min(0.2 + 0.1 * count, 0.8);\n    return `rgba(0, 49, 73, ${opacity})`;\n  }\n\n  onClick(e) {\n    if (e.features) {\n      console.log(e.features[0].properties);\n      const code = this.getCode(e.features[0].properties.prefCode);\n      this.select(code);\n      this.onSelected(code);\n    }\n  }\n\n  getCode(prefCode) {\n    if (prefCode.substr(0, 2) === '01') {\n      for (let code in hokkaidoPrefCodes) {\n        if (hokkaidoPrefCodes[code].includes(prefCode)) return code;\n      }\n\n    } else {\n      return prefCode;\n    }\n  }\n\n  select(code) {\n    let filter = [code];\n    if (code in hokkaidoPrefCodes){\n      filter = hokkaidoPrefCodes[code];\n    }\n    this.map.setFilter('pref-line-selected', ['in', 'prefCode', ...filter]);\n    this.map.setFilter('region-line-selected', ['==', 'code', '0']);\n  }\n\n  selectRegion(code) {\n    this.map.setFilter('pref-line-selected', ['==', 'prefCode', '0']);\n    this.map.setFilter('region-line-selected', ['==', 'code', code]);\n  }\n}\n\n\nconst hokkaidoPrefCodes = {\n  \"011000\": [\"011000\"], // 宗谷地方\n  \"012000\": [\n    \"012010\", // 上川地方\n    \"012020\"  // 留萌地方\n  ],\n  \"013000\": [\"013000\"], // 網走・北見・紋別地方\n  \"014100\": [\n    \"014020\", // 釧路地方\n    \"014010\"  // 根室地方\n  ],\n  \"014030\": [\"014030\"], // 十勝地方\n  \"015000\": [\n    \"015010\", // 胆振地方\n    \"015020\"  // 日高地方\n  ],\n  \"016000\": [\n    \"016010\", // 石狩地方\n    \"016020\", // 空知地方\n    \"016030\"  // 後志地方\n  ],\n  \"017000\": [\n    \"017010\", // 渡島地方\n    \"017020\"  // 檜山地方\n  ]\n};\n","import React, { Component } from 'react';\n\nimport WeatherInfoSidebar from './WeatherInfoSidebar';\nimport WeatherInfoLayer from './WeatherInfoLayer';\n\nconst url = 'https://storage.googleapis.com/weather-info/weather-info-all.json';\n\nexport default class WeatherInfo extends Component {\n  state = {\n    info: null,\n  };\n\n  componentDidMount() {\n    this.loadWeatherInfo();\n  }\n\n  onload(map) {\n    this.map = map;\n    this.addLayer();\n  }\n  \n  loadWeatherInfo() {\n    const timestamp = new Date().getTime();\n    fetch(url + '?' + timestamp, {mode: 'cors'})\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ info: data });\n        this.weatherInfo = data;\n        this.addLayer();\n      });\n  }\n\n  addLayer() {\n    if (!this.map || !this.weatherInfo) return;\n    this.layer = new WeatherInfoLayer(this.map, this.weatherInfo, this.props.period, this.onSelected);\n  }\n\n  render() {\n    return (\n      <WeatherInfoSidebar\n        data={this.state.info}\n        period={this.props.period}\n        ref={el => this.sidebar = el}\n        onSelectRegion={(code) => this.layer.selectRegion(code)}\n      />\n    );\n  }\n\n  onSelected = (code) => {\n    console.log(this.weatherInfo.prefs[code]);\n    if (this.weatherInfo.prefs[code]) {\n      this.sidebar.showPref(code);\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nimport WeatherInfo from './WeatherInfo';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidGF0dGlpIiwiYSI6ImNqZWZ4eWM3NTI2cGszM2xpYXEyZndpd3IifQ.ifzbR45HecVGxChbdR2hiw';\n\n\nexport default class Map extends Component {\n  componentDidMount() {\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/tattii/cj1bob6hw003t2rr5s2svi3iq',\n      zoom: 5,\n      center: [136.6, 35.5],\n      hash: true,\n      attributionControl: false\n    });\n\n    this.map.on('load', () => {\n      this.child.onload(this.map);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div ref={el => this.mapContainer = el} id=\"map\" />\n        <WeatherInfo\n          ref={ref => this.child = ref}\n          period={48}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport Map from './Map';\n\nclass App extends Component {\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n"],"sourceRoot":""}